set -g mouse on
setw -g mode-keys vi
set -g focus-events on

set-option -g default-terminal "screen-256color"

set -g status-bg colour236
set -g status-fg white

# center the window list
set -g status-justify centre
# set status-left to current path's basename, default was "[#S] "
set -g status-left " #{pane_current_path}"
# extra length to display pane title
set -g status-left-length 20
# status-right, default was " "#{=21:pane_title}" %H:%M %d-%b-%y"
set -g status-right '#{=30:pane_title} | %I:%M%p %b %d'
set -g status-right-length 60
# display status bar on top
set -g status-position top
# set window-status-bar background color to orange
set -g window-status-current-style bg=colour166
# remove delay on vim esc key
set -s escape-time 0

# set iterm title
set-option -g set-titles on
set-option -g set-titles-string "#{pane_title} | #{window_name}" # session name|pane title

# set window title to the current path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set -g allow-rename on

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows
set -g renumber-windows on

# set clipboard on
set-option -g set-clipboard external

# pane navigation
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# split windows with more logical keys
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# switch between panes and zoom
# https://superuser.com/questions/772700/switching-tmux-zoom-between-panes-without-zooming-out
bind-key -r ] select-pane -t .+1 \; resize-pane -Z
bind-key -r [ select-pane -t .-1 \; resize-pane -Z

# ` will put the current pane in the background
# Tab will join it back to the foreground - full screen
# https://superuser.com/questions/1556055/how-to-target-background-pane-in-tmux
bind-key -r ` break-pane -d -n background
bind-key -r Tab join-pane -s background \; resize-pane -Z

# send the prefix to nested session
# http://unix.stackexchange.com/questions/130730/how-to-quickly-send-commands-to-nested-tmux-sessions
# use "g" instead of "a" as Ctrl-a is going to beginning of readline
bind-key -n C-g send-prefix

bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

# source os x specific stuff
if-shell 'if [ $unix ] && [ -f $HOME/.macos.tmux.conf ]; then true; else false; fi' \
	"source-file '$HOME/.macos.tmux.conf'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-open'

# saving and restoring vim sessions
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'

# source local tmux.conf only if it exists
if-shell 'if [ -f $HOME/.local.tmux.conf ]; then true; else false; fi' \
	"source-file '$HOME/.local.tmux.conf'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
